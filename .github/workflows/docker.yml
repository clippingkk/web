# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Docker Deployment
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - uses: PromptPal/github-action@v1.0.2
        env:
          PROMPTPAL_ENDPOINT: ${{ secrets.PROMPTPAL_ENDPOINT }}
          PROMPTPAL_API_TOKEN: ${{ secrets.PROMPTPAL_API_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: pp g
      - name: Install dependencies
        run: pnpm install
      - run: pnpm run codegen
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            registry.cn-shanghai.aliyuncs.com/annatarhe/clippingkk-web
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cn-shanghai.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PWD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          GIT_COMMIT: ${{ github.sha }}
        with:
          context: .
          push: true
          build-args: GIT_COMMIT=${{ github.sha }}
            NEXT_PUBLIC_PP_TOKEN=${{ secrets.PROMPTPAL_CLIENT_API_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
